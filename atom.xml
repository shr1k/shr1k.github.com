<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TechSwamp]]></title>
  <link href="http://shr1k.github.com/atom.xml" rel="self"/>
  <link href="http://shr1k.github.com/"/>
  <updated>2013-03-23T01:32:55+00:00</updated>
  <id>http://shr1k.github.com/</id>
  <author>
    <name><![CDATA[Shrikant]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why Fred Wilson is wrong about "DIY data science"]]></title>
    <link href="http://shr1k.github.com/post/2013/03/23/why-fred-wilson-is-wrong-about-diy-data-science/"/>
    <updated>2013-03-23T00:47:00+00:00</updated>
    <id>http://shr1k.github.com/post/2013/03/23/why-fred-wilson-is-wrong-about-diy-data-science</id>
    <content type="html"><![CDATA[<p>Fred Wilson, in a recent <a href="http://www.avc.com/a_vc/2013/03/diy-data-science.html">blog post on &#8220;DIY data science&#8221;</a>, said this:</p>

<blockquote><p>I think data science and machine learning (I know they are not the same thing) are going to be a very big part of tech innovation in the coming years. And I also know that putting powerful tools in the hands of &#8220;everyman&#8221; produces more innovation than can happen when the tools are limited to mathematicians and scientists.</p></blockquote>

<p>This is one of those pithy expressions that sound great when rolling off the idea-train. Indeed, imagine the possibilities of insightful output that could be enabled by &#8220;democratising&#8221; data science and machine learning.</p>

<p>However, this is also an idea that just appears unworkable at best.</p>

<p>True &#8220;data science&#8221; is a process. It&#8217;s not just about a pretty visualisation or a &#8220;ka-ching!&#8221; epiphanic insight. It requires:</p>

<ol>
<li>Articulating the objective</li>
<li>Identifying the inputs</li>
<li>Organising the source data into the required form of input</li>
<li>Identifying the input transformation or process</li>
<li>Implementing the transformation/process</li>
<li>Identifying the required output (see Step 1)</li>
<li>Making sense of the output (see Step 1)</li>
</ol>


<p><em>(Note: an underlying assumption is that the source data is clean and readily available &#8211; which is quite the joke for most data domains today)</em></p>

<p>The current state of data analysis technology has come admirably far from 10 years back, thanks to phenomenal technological efforts like <a href="http://d3js.org/">D3.js</a> and <a href="http://www.r-bloggers.com/">the R ecosystem</a> (with an emphasis on <a href="https://github.com/hadley">anything by Hadley Wickham</a>), and some other innovations in <a href="http://continuum.io/wakari.html">analysis</a> and <a href="http://www.creativebloq.com/design-tools/data-visualisation-712402">visualisation</a>. However, one common factor in all of these tools is that they all only address <em>Step 5</em> in the above process.</p>

<p>Fred goes on to say:</p>

<blockquote><p>So what is the Tumblr or Blogger or Wordpress of data science? When will my son and his friends be able to take the NBA dataset and start running algorithms against it to produce better fantasy picks? When will my daugther <em>[sic]</em> and her friends be able to take the TV viewing dataset to decide what TV shows to go back and watch that they missed last year?</p></blockquote>

<p>Well, there can be none. The blogging (or more specifically &#8211; publishing on the Web) revolution solved a problem of cost. It used to be too expensive for talented amateurs or hobbyists to publish (physical costs) and reach a wide audience (distribution costs). The lack of an equivalent for data science just means that there aren&#8217;t similar hurdles to overcome. Potential data scientists are NOT being held back by such artificial constraints. What <strong>is</strong> preventing the layperson right now from becoming data wizards is, quite simply, the lack of knowledge.</p>

<p>Defining a problem domain is not something that a tool can magically do. That skill comes with a healthy mix of rigorous education and experience.</p>

<p>The world of data science is quite exciting, and <a href="http://gigaom.com/2012/12/18/a-programmers-guide-to-big-data-12-tools-to-know/">tools</a>, <a href="http://conductrics.com/data-science-resources/">techniques</a> and <a href="http://schoolofdata.org/handbook/courses/">education</a> will only continue to improve and wow us, but &#8220;DIY data science&#8221; will never be a thing. At least in the way Fred Wilson envisions it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Reader's forced euthanasia]]></title>
    <link href="http://shr1k.github.com/post/2013/03/15/google-readers-forced-euthanasia/"/>
    <updated>2013-03-15T12:41:00+00:00</updated>
    <id>http://shr1k.github.com/post/2013/03/15/google-readers-forced-euthanasia</id>
    <content type="html"><![CDATA[<p>Like many others, I was pretty badly struck in the face by the announcement of the Google reader shutdown.</p>

<p>Since I&#8217;m a techie, but not really a developer, a lot of the other Google properties being shut down hadn&#8217;t impacted me as much.</p>

<p>However, a majority of my Internet content consumption is driven by Reader, which is why it was utterly baffling that the reasoning given was &#8221;<a href="http://googlereader.blogspot.co.uk/2013/03/powering-down-google-reader.html">usage of Google Reader has declined</a>&#8221;, especially given some of the <a href="http://www.buzzfeed.com/jwherrman/google-reader-still-sends-far-more-traffic-than-google">rough userbase data</a> that have <a href="http://googlesystem.blogspot.co.uk/2013/03/google-reader-data-points.html">popped up</a>. I wonder where Google gets their data from.</p>

<h3>Embrace, extend, extinguish</h3>

<p>RSS is a great content consumption protocol that is fully open and interoperable. Despite the <a href="http://techcrunch.com/2011/10/20/google-reader-getting-overhauled-removing-your-friends/">&#8220;+isation&#8221; of Reader (or The Great Reader Redesign)</a> (or maybe in part <em>because</em> of it), I had assumed Google would remain committed to at least maintaining Reader, even no resources were being thrown at improving it. Especially since they had thrown their weight behind <a href="http://code.google.com/p/pubsubhubbub/">PubSubHubbub</a>, and bought FeedBurner. (Embrace!)</p>

<p>But having done this, Reader then essentially crowded out the entire market for RSS readers by just existing as a Google gorilla. For the most part, it appeared to be good. I was a staunch user of Bloglines for the longest time, until it stagnated, and then I played around with a few offline readers before jumping ship to Reader. Reader was the exciting new player &#8211; constantly innovating, adding new features, being fast to load, and with a great mobile interface. This went on till it effectively powered most of the popular &#8220;alternative&#8221; readers (Reeder, FeedDemon, Feedly) that relied on its (admittedly undocumented and private) API. (Extend!)</p>

<p>But now, it appears to me that the real reason for pulling the rug out form underneath the many millions of users was the second one they mentioned, saying &#8220;as a company weâ€™re pouring all of our energy into fewer products&#8221;. This unfortunately smacks pretty hard of Google trying to dictate the direction of the web by trying to foist Google+ onto everyone. (Extinguish!)</p>

<h3>What&#8217;s next on the block?</h3>

<p>Given that <a href="http://googleblog.blogspot.co.uk/2013/03/a-second-spring-of-cleaning.html">in the same announcement</a>, they also announced that they&#8217;re killing off CalDAV API access to favour their own proprietary Calendar API, I can&#8217;t help but agree with The Guardian tech blogger Ruper Goodwin:</p>

<blockquote><p>The corporate surprise adds to the decision itself to paint a picture of a company dangerously adrift from a real understanding of its audience, and the information ecosystem.</p></blockquote>

<p>What I just don&#8217;t get is that Google serves up ads perfectly fine when people use FeedBurner, and now they&#8217;re killing off the biggest FeedBurner client? They&#8217;ve already killed its API, and the FeedBurner site still carries the pre-Google+ design. This clearly points towards them killing off FeedBurner as well. It&#8217;s more or less official &#8211; Google hates RSS.</p>

<h3>The alternatives</h3>

<p>Most people are suggesting Flipboard and Feedly as alternatives, but they either really don&#8217;t get it, or their needs have diverged from the usual RSS reading crowd.</p>

<p>I detest things trying to learn my preferences, because my reading preferences change all the time. Sometimes I ignore a feed for 2 weeks, then catch up on all of it. Sometimes, I read every item from a source every time it&#8217;s published. I don&#8217;t want my preferences shaped by algorithms, as it always feels like I&#8217;m missing out on something. This is als why I pretty much <strong>never</strong> touched the &#8220;Sort by magic&#8221; option in Google Reader.</p>

<p>Additionally, magazine and river style just don&#8217;t cut it. I&#8217;m not reading a magazine or a social news site &#8211; what I need is an inbox of site updates. Whether the source is a news site, personal blog or webcomic is irrelevant, I just want to see how many updates are there, and which ones remain to be read. And horror of horrors, if I don&#8217;t want to read something, I just skip it! I would prefer to not have the cognitive load of figuring out which was the last XKCD or Penny Arcade post I read, and how many I have missed over a period of being offline or plain busy. <a href="http://threads2.scripting.com/2013/march/goodbyeGoogleReader">Dave Winer is missing the point</a> &#8211; even though the tool may be called a &#8220;news reader&#8221;, it really is an &#8220;RSS reader&#8221;.</p>

<p>The RSS reading alternatives doing the rounds currently are <a href="http://www.netvibes.com/">NetVibes</a>, <a href="http://www.bloglines.com/">Bloglines</a> (which is now just a skin of NetVibes), <a href="http://theoldreader.com/">The Old Reader</a>, <a href="http://www.newsblur.com/">NewsBlur</a>, and self-hosted options like <a href="http://tt-rss.org/">Tiny Tiny RSS</a> and <a href="http://selfoss.aditu.de/">selfoss</a>.</p>

<p>Or I could get off my lazy behind and attempt to build my own. The only problem with that is that I&#8217;ll probably end up hosting it on App Engine. Argh!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to hire a product manager]]></title>
    <link href="http://shr1k.github.com/post/2013/02/26/how-to-hire-a-product-manager/"/>
    <updated>2013-02-26T20:43:00+00:00</updated>
    <id>http://shr1k.github.com/post/2013/02/26/how-to-hire-a-product-manager</id>
    <content type="html"><![CDATA[<blockquote><p>Product management may be the one job that the organization would get along fine without (at least for a good while). Without engineers, nothing would get built. Without sales people, nothing is sold. Without designers, the product looks like crap. But in a world without PMs, everyone simply fills in the gap and goes on with their lives. It&#8217;s important to remember that - as a PM, you&#8217;re expendable. Now, in the long run great product management usually makes the difference between winning and losing, but you have to prove it. Product management also combines elements of lots of other specialties - engineering, design, marketing, sales, business development. Product management is a weird discipline full of oddballs and rejects that never quite fit in anywhere else.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Touch Developer Preview: A First Look for the Nexus 7]]></title>
    <link href="http://shr1k.github.com/post/2013/02/21/ubuntu-touch-developer-preview-a-first-look-for-the-nexus-7/"/>
    <updated>2013-02-21T20:32:00+00:00</updated>
    <id>http://shr1k.github.com/post/2013/02/21/ubuntu-touch-developer-preview-a-first-look-for-the-nexus-7</id>
    <content type="html"><![CDATA[<p>The <a href="https://wiki.ubuntu.com/Touch/ReleaseNotes">Ubuntu Touch Developer Preview</a> landed today and I was really excited to see it available for my Nexus 7. Following the <a href="https://wiki.ubuntu.com/Touch/Install">really simply install instructions</a>, I was ready to go in less than 30 minutes (and most of that time was just waiting for the OS images to download).</p>

<p><strong>Quick note</strong>: Please read the <a href="https://wiki.ubuntu.com/Touch/ReleaseNotes#Nexus_7">known issues with the Nexus 7</a> build before asking questions in <a href="http://webchat.freenode.net/?channels=ubuntu-phone">#ubuntu-phone</a>, as they cover some problems you might notice right away.</p>

<!-- more -->


<h2>Lock-screen and home-screens</h2>

<p>The first signs of Ubuntu is the heavily Unity flavoured lock-screen that greets you on booting up. I was a little puzzled by the &#8220;14 tweets received&#8221; message, but it turns out that it is just a placeholder image.</p>

<p><img class="center" src="http://i.imgur.com/lLoPPkg.png"></p>

<h2></h2>

<p>Swiping left or right from the screen edge in the lock-screen takes you to the central home-screen (of five in total). Scrolling and swiping are nice and smooth (with a noticeable stutter when running quite a few apps)</p>

<p><img class="center" src="http://i.imgur.com/vcccQr0.png"></p>

<h2></h2>

<p>Swiping left or right in middle of the home-screen navigates between the other home-screens (taking care to stay away from the edges of the screen, as it does something else entirely)</p>

<p><img class="center" src="http://i.imgur.com/Ki8BVvA.png"></p>

<p>I really hope that the list of &#8220;People&#8221; that Canonical have set up (all of whom appear to be Canonical employees) have only fake contact details and messaging histories pre-populated in for them, because everyone&#8217;s phone number is visible, and there&#8217;s a lot of other potentially personally-identifying information in there.</p>

<h2></h2>

<p>Swiping left from a home-screen brings up the much maligned Unity launcher.</p>

<p><img class="center" src="http://i.imgur.com/SS2Hx3Q.png"></p>

<h2>Notification area</h2>

<p>There is a notification area on the top right with indicators for messaging, volume control, Wifi, battery status and the time. The notification swipe-down bar is not a unified one a la Android or Symbian<sup>3,</sup> but you have to target each tiny icon to bring down its own configuration options. The screenshot below shows the swipe-down options for the time indicator.</p>

<p><img class="center" src="http://i.imgur.com/FA9wY62.png"></p>

<h2>Apps</h2>

<p>The &#8220;Apps&#8221; home-screen shows the list of &#8220;Running&#8221;, &#8220;Frequently Used&#8221;, &#8220;Installed&#8221;, and &#8220;Available for Download&#8221; apps in their respective groups.</p>

<p><img class="center" src="http://i.imgur.com/sCcBKOf.png"></p>

<h2></h2>

<p>That this is a developer preview is heavily reinforced by the fact that most of the apps are in fact just placeholders and do (nearly) nothing. The calculator and weather apps, for instance, don&#8217;t do anything at all and are just static images.</p>

<p><img class="left" src="http://i.imgur.com/svmgHqu.png">
<img class="right" src="http://i.imgur.com/hVJLbTb.png"></p>

<h2></h2>

<p>There are a few other apps (Amazon, eBay, Gmail) that are essentially the iPhone-optimised versions of the websites wrapped in a browser-frame. The browser appears to be a WebKit container that spits out a Safari 5.1 / iOS user-agent.</p>

<p><img class="center" src="http://i.imgur.com/n4LHcVH.png"></p>

<p>But it is somewhat functional, and you can navigate to websites by swiping from the bottom screen edge.</p>

<p><img class="center" src="http://i.imgur.com/fGtF8TF.png"></p>

<p>Some of the (barely) functional native apps are the Notepad and the Photo Gallery. The Notepad loses any created notes on rebooting, but the Photo Gallery is surprisingly functional, with some basic image editing functions like cropping, resizing and enhancing already in place. All these features work quite alright as well.</p>

<p><img class="left" src="http://i.imgur.com/03Y5jjF.png"></p>

<p><img class="right" src="http://i.imgur.com/k88jZeR.png"></p>

<h2></h2>

<p>Swiping up from the bottom screen-edge of every app brings up a set of context-relevant options. Interestingly, a &#8220;longer&#8221; swipe from the same area brings up a little lens icon, which if targeted, presents a more generic set of actions.</p>

<p><img class="center" src="http://i.imgur.com/QiRIYYj.png"></p>

<p>There appears to be a bug in its implementation as it stands right now &#8211; I brought this up when in the Calculator app, but it is showing some actions that only apply to photos, like &#8220;Share&#8221;, &#8220;Delete&#8221;, and &#8220;Add&#8221;. However, the &#8220;X&#8221; icon in the bottom row is the way to exit a running app.</p>

<h2>Keyboard</h2>

<p>Oddly enough, the buggiest part of the entire release currently appears to be the keyboard.</p>

<p><img class="center" src="http://i.imgur.com/0TRXCFI.png"></p>

<p>It is clearly not built for tablets yet, is difficult to use, and generally &#8216;misbehaves&#8217; at times. It would keep changing focus to the wrong text-box in the browser, and when I was playing around with the People app, the keyboard decided it never wanted to leave the screen. This was only resolved by a reboot.</p>

<p><strong>Addendum</strong>: all screenshots were taken with the Nexus 7 connected to the computer and by running <code>adb shell screencap -p \| uuencode o | uudecode -o &lt;filename&gt;.png</code>, which saves a PNG screenshot in the current directory.</p>

<h2>Conclusions</h2>

<p>I am currently only testing out the release for the Nexus 7, so I&#8217;m not in a position to test the camera or the phone-related features like calling or texting. The Nexus 4 is my primary phone, and not really a candidate for experimentation at this stage.</p>

<p>What&#8217;s next? I guess Canonical will put their nose to the grindstone on this and start churning out functional <a href="https://wiki.ubuntu.com/Touch/CoreApps">core apps</a>. Since this is the first Developer Preview I&#8217;m ever playing around with, I couldn&#8217;t really say if it is a GREAT start, but it certainly sets the stage quite nicely in terms of what to expect. Given that the entire effort essentially appears to amount to <a href="https://wiki.ubuntu.com/Touch/Contribute#Source_code">integrating the existing Ubuntu codebase with CyanogenMod</a>, I&#8217;m quite positive that the Canonical team will put out an excellent product.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Suppressing warnings when starting NFS-related services]]></title>
    <link href="http://shr1k.github.com/post/2013/02/19/suppressing-warnings-when-starting-nfs-related-services/"/>
    <updated>2013-02-19T20:31:00+00:00</updated>
    <id>http://shr1k.github.com/post/2013/02/19/suppressing-warnings-when-starting-nfs-related-services</id>
    <content type="html"><![CDATA[<p>After restarting the Raspberry Pi and the attached paraphernalia every once in a while, the USB HDD that forms the backbone of my NAS needs to be re-mounted each time. The sensible thing to do here would obviously be to manage the re-mounting in a bootup script, but until I get around to doing that I mount the HDD manually.</p>

<p>Since this HDD is used in an NFS share over the network, I also need to export the mount points again and restart the <code>rpcbind</code> and <code>nfs-kernel-server</code> services. I noticed that every time I did this, the latter service would start up alright, but throw out some odd-looking warnings.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">pi@raspberrypi ~ $ sudo service nfs-kernel-server restart</span>
</span><span class='line'><span class="go">[ ok ] Stopping NFS kernel daemon: mountd nfsd.</span>
</span><span class='line'><span class="go">[ ok ] Unexporting directories for NFS kernel daemon....</span>
</span><span class='line'><span class="go">[ ok ] Exporting directories for NFS kernel daemon....</span>
</span><span class='line'><span class="go">[....] Starting NFS kernel daemon: nfsdrpc.nfsd: address family inet6 not supported by protocol UDP</span>
</span><span class='line'><span class="go"> mountdrpc.mountd: svc_tli_create: could not bind to requested address</span>
</span><span class='line'><span class="go">rpc.mountd: svc_tli_create: could not bind to requested address</span>
</span><span class='line'><span class="go">rpc.mountd: svc_tli_create: could not bind to requested address</span>
</span><span class='line'><span class="go">. ok </span>
</span><span class='line'><span class="go">pi@raspberrypi ~ $ </span>
</span></code></pre></td></tr></table></div></figure>


<p>The solution to this is quite simple - turns out all you need to do is to edit the file <code>/etc/netconfig</code>, which should look something like this:</p>

<p><img src="http://i.imgur.com/Xmx1Ogv.png"></p>

<p>Just comment out the lines that begin with <code>udp6</code> and <code>tcp</code> by prefixing each line with a &#8216;#&#8217;, and save the file. (Note that you need to be root or use <code>sudo</code> to do this.)</p>

<p>Now when you restart <code>nfs-kernel-server</code>, the IPv6-related warnings will be gone!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Raspberry Pi-powered headless media server and NAS]]></title>
    <link href="http://shr1k.github.com/post/2013/02/16/setting-up-a-raspberry-pi-powered-headless-media-server-and-nas/"/>
    <updated>2013-02-16T09:53:00+00:00</updated>
    <id>http://shr1k.github.com/post/2013/02/16/setting-up-a-raspberry-pi-powered-headless-media-server-and-nas</id>
    <content type="html"><![CDATA[<p>One of the best gifts I&#8217;ve ever received to date is the <a href="http://i.imgur.com/1PSNV.jpg">End Of The World Survival Kit</a> from my 2012 Reddit Secret Santa. (As an aside, I was so moved by this, that I felt ashamed of taking the easy route of giving my giftee just a T-shirt, and made amends by signing up for re-matching and sending another gift to someone else.)</p>

<p>The best part of the kit was the Raspberry Pi Model B. Recently unemployed and looking for things to do, it was the perfect way to get started on some reasonably techie hobbyism (that&#8217;s a word now). The only hitch was that I had the board, but no peripherals at all.</p>

<p>Or so I thought.</p>

<!-- more -->


<p>The only items really required to get the RPi up and running are:</p>

<ul>
<li>An SD card reader (which my laptop already had)</li>
<li>A power supply (for which a BlackBerry charger, or any other microUSB charger, will do just fine)</li>
<li>An SD card (or microSD card + SD adapter) of 4+ GB</li>
<li>An Ethernet cable (hello, dusty old Sky router box! What&#8217;s this left unused inside you for the last 2.5 years?)</li>
</ul>


<p>Beyond these, the other required ingredients of this tasty dish are (and some of these may seem obvious):</p>

<ul>
<li>A wireless router</li>
<li>An externally powered USB HDD of a reasonable capacity (500 GB, in my case)</li>
<li>A reasonable number of wireless &#8216;client&#8217; devices (laptops, tablets, smartphones) around the house, just to make the effort worthwhile</li>
</ul>


<p>After this epiphany, getting the whole setup in place was a mere matter of ploughing through the numerous guides published on the interwebs and the odd all-nighter spent figuring out why things didn&#8217;t work. So here&#8217;s a quick run-down of the steps involved in &#8211; <em>drum-roll</em> &#8211; setting up a Raspberry Pi-powered headless media server and NAS!</p>

<ol>
<li><a href="#setup">Set up the Raspberry Pi</a></li>
<li><a href="#mount">Mount external storage</a></li>
<li><a href="#server">Install DLNA server</a></li>
<li><a href="#client">Install DLNA client</a></li>
<li><a href="#nfs">Setup NFS</a></li>
</ol>


<h2>1. <a id="setup"></a>Set up the Raspberry Pi</h2>

<p>Simply <a href="http://www.raspberrypi.org/downloads">download</a> the image and <a href="http://elinux.org/RPi_Easy_SD_Card_Setup">&#8216;burn&#8217; it onto the SD card</a>. I picked Raspbian as I use Ubuntu and am familiar with the Debian way of doing things. I&#8217;m also comfortable with <code>dd</code> now (having been burnt a couple of times earlier &#8211; alcohol and <code>/dev/urandom</code> do NOT mix well), and opted for the command-line approach.</p>

<p><img src="http://i.imgur.com/anEtp3W.png" title="Preparing the SD card" ></p>

<p>After you plug the prepared SD card into the RPi and power it on, a quick:</p>

<p><code>ssh -Y pi@&lt;IP address&gt;</code> <em>(using the password &#8220;raspberry&#8221; without the quotes &#8211; the &#8220;-Y&#8221; means you can open graphical programs off the RPi on your own screen, but running in the RPi&#8217;s context)</em></p>

<p>and you&#8217;re logged in. You can find out the IP address of the RPi by checking your router admin page. I&#8217;m not sure if there&#8217;s another way to do this, but this worked for me.</p>

<p>Once logged in, the first thing to do would be to run the <strong>raspi-config</strong> tool (<code>sudo raspi-config</code>), &#8221;<em>Expand Root Partition to Fill SD Card</em>&#8221; and reboot (<code>sudo shutdown -r now</code> or <code>sudo reboot</code>). This ensures you&#8217;re using the full capacity of the SD card.</p>

<p><img src="http://i.imgur.com/4p63pkN.png" title="Expand Root Partition to Fill SD Card" ></p>

<h2>2. <a id="mount"></a>Mount external storage</h2>

<p>After the OS has been set up, updated and is tootling along happily, plug in the USB HDD. This should be externally powered, because the RPi doesn&#8217;t appear to be able to power USB devices beyond a keyboard or a mouse.</p>

<p>Keep in mind that the standard Raspbian build does not ship with modern NTFS support, so if you have any partitions formatted as NTFS, you will need to <code>sudo apt-get install ntfs-3g</code> to be able to use them properly.</p>

<p>Find the names of the partitions you want to mount (<code>sudo fdisk -l</code>), and mount them.</p>

<p><img src="http://i.imgur.com/xzlqnFx.png" title="The required partition names are listed under &#34;Device Boot&#34;" alt="The required partition names are listed under &#34;Device Boot&#34;"></p>

<p>I don&#8217;t mind relying on the smarts of Debian to manage this, so a <code>sudo mount -t auto /dev/sda1 /media/audvid</code> should work just fine. Just take care that <code>/dev/sda1</code> and <code>/media/audvid</code> actually exist first.</p>

<h2>3. <a id="server"></a>Install DLNA server</h2>

<p>The nest step is to install a DLNA/UPnP server. The RPi has MiniDLNA readily available in the repositories, so a <code>sudo apt-get install minidlna</code> will suffice.</p>

<p>After it&#8217;s been downloaded and installed, fire up <code>/etc/minidlna.conf</code>, and edit the line that starts with <code>#media_dir=</code> to point at your freshly mounted HDD locations. You can use multiple lines for different paths and content types.</p>

<p><img src="http://i.imgur.com/MPV0sxk.png" title="Editing minidlna.conf" ></p>

<p>The other values can be left untouched (unless you want to fiddle about, of course).</p>

<p>Follow this up with a <code>sudo service minidlna force-reload</code> to start indexing the new locations. You can follow the progress of this indexing either by tailing the log file with a <code>tail -f /var/log/minidlna.log</code> or pointing your browser at <code>http://&lt;IP address of RPi&gt;:&lt;Port number from minidlna.conf&gt;</code>.</p>

<p><img src="http://i.imgur.com/6ZJddG9.png" title="MiniDLNA indexing progress" ></p>

<p>This could take a while for large media collections, but one way to guess that indexing has completed is if the log file shows a &#8220;Parsing playlists&#8230;&#8221; message.</p>

<p>Note here that any changes made to these &#8216;watched&#8217; locations will necessitate a <code>sudo service minidlna force-reload</code>, if the notification options in <code>/etc/minidlna.conf</code> haven&#8217;t been configured.</p>

<h2>4. <a id="client"></a>Install DLNA client</h2>

<p>So you have a DLNA server, but how do you use it? <a href="http://en.wikipedia.org/wiki/List_of_UPnP_AV_media_servers_and_clients">With a DLNA client, of course</a>! After twiddling with a few options, I settled on the combination of <a href="https://play.google.com/store/apps/details?id=com.bubblesoft.android.bubbleupnp">BubbleUPnP</a> and VLC, which appears to offer the best balance of free and feature-filled amongst the Android clients. All the rest seemed deficient in one way or another.</p>

<p><img class="left" src="http://i.imgur.com/BL0hrya.png" width="294" height="490" title="BubbleUPnP: Select media source" >
<img class="right" src="http://i.imgur.com/xHuvrQ2.png" width="294" height="490" title="BubbleUPnP: Playing audio" >
<img src="http://i.imgur.com/v1iTxdL.png" title="BubbleUPnP: Delegating video to VLC" ></p>

<h2>5. <a id="nfs"></a>Setup NFS</h2>

<p>Now what if you need to modify or add to your media library? Futzing around with media metadata and hauling giant files back and forth via DLNA is not possible, and would be too cumbersome over a phone or tablet&#8217;s interface anyway. Additionally, there doesn&#8217;t seem to be any sane method of DLNA playback through the Ubuntu desktop.</p>

<p>The best thing to do in this situation remained to mount the media partitions on the USB HDD as network shares. After some consideration of the Samba and NFS approaches, <a href="https://help.ubuntu.com/8.04/serverguide/network-file-system.html">I decided to go for the latter</a>.</p>

<p>Install the NFS server-side components on the RPi using <code>sudo apt-get install nfs-kernel-server</code>, which should also install a package called <code>rpcbind</code>. After this, add the HDD&#8217;s mounted partitions into the <code>/etc/exports</code> file, save it, and run <code>exportfs -av</code>. Follow this up by restarting the <code>nfs-kernel-server</code> and <code>rpcbind</code> services.</p>

<p>On the client side, do a <code>sudo apt-get install nfs-common</code>, and finally, mount the &#8216;exported&#8217; paths by saying <code>sudo mount &lt;IP address&gt;:/media/audvid /home/shrik/Music</code> and the like. If all succeeds, when you run the <code>mount</code> command after this, you should the newly mounted paths at the bottom of the output.</p>

<p><img src="http://i.imgur.com/saHUKcn.png" title="NFS shares mounted successfully" ></p>

<p>At this point, you should be able to make changes in these directories from the client machine, and have these reflected in the RPi.</p>

<p>And there you have it &#8211; a Raspberry Pi running without any I/O peripherals and powering a networked home media centre! I&#8217;m not entirely certain how robust this setup will be, but it&#8217;s been running on a couple of days up-time without any adverse effects so far.</p>
]]></content>
  </entry>
  
</feed>
